//requiring JS files
var search = require('search');

//window start
var mapWin = Ti.UI.createWindow({
	title : "Map Window"
});
exports.mapWin = mapWin;
//window end

var holder = Ti.UI.createView({
	height : 800,
	bottom : 0,
	width : Ti.UI.FILL,
});
var info = [];
var response, name, population, lat, lng, dist, county;
var remoteResponse = function() {
	// Response function code
	response = JSON.parse(this.responseText);
	for (var i = 0; i < response.results.length; i++) {
		name = response.results[i].geocode.name;
		st = response.results[i].geocode.admin_code1;
		population = response.results[i].geocode.population;
		lat = Math.round(response.results[i].geocode.latitude * 1000) / 1000;
		lng = Math.round(response.results[i].geocode.longitude * 1000) / 1000;
		dist = Math.round(response.results[i].geocode.distance * 100) / 100;
		county = response.results[i].geocode.admin_name2;

		switch (population) {
			case null:
				population = "Not Available";
				break;
		}
		var rows = Ti.UI.createTableViewRow({
			id : i + 1,
			// title : name,
			name : name,
			st : st,
			county : county,
			population : population,
			distance : dist,
		});

		info.push(rows);
	};
	var Map = require('ti.map');
	var mapview = Map.createView({
		mapType : Map.NORMAL_TYPE
	});
	mapWin.add(mapview);
	// console.log(info);
	search.timesTable.setData(info);
};

var remoteError = function(e) {
	Ti.API.debug("Status: " + this.status);
	Ti.API.debug("Text: " + this.responseText);
	Ti.API.debug("Error: " + e.error);
	alert("There is a problem pulling the data");
};

var xhr = Ti.Network.createHTTPClient({
	onload : remoteResponse,
	onerror : remoteError,
	timeout : 5000
});

var runGeo = function() {

	Ti.Geolocation.purpose = "Your location is needed to gather lat/long coords.";

	Ti.Geolocation.getCurrentPosition(function(e) {
		var lat = e.coords.latitude;
		var lng = e.coords.longitude;
		var url = "http://api.nytimes.com/svc/semantic/v2/geocodes/query.json?nearby=" + lat + "," + lng + "&api-key=ec2c67ba0d91240ac18bbf24043c8cb5:1:68792990";
		var coordinateLabel = Ti.UI.createLabel({
			color : '#fff',
			text : 'Latitude: ' + lat + ', Longitude: ' + lng,
			height : Ti.UI.SIZE,
			textAlign : 'center',
			font : {
				fontSize : '20dp',
				fontWeight : 'bold'
			}
		});

		holder.add(coordinateLabel);
	});

};

// var mapview = Titanium.Map.createView({
// mapType: Titanium.Map.STANDARD_TYPE,
// region:{latitude:33.74511, longitude:-84.38993, latitudeDelta:0.5, longitudeDelta:0.5},
// animate:true,
// regionFit:true,
// userLocation:true
// });
// runGeo();

xhr.open("GET", "http://api.nytimes.com/svc/semantic/v2/geocodes/query.json?nearby=37.78583526611328,-122.40641784667969&api-key=ec2c67ba0d91240ac18bbf24043c8cb5:1:68792990");
xhr.send();

mapWin.add(holder);

//requiring JS files
var search = require('search');

//window start
var mapWin = Ti.UI.createWindow({
	title : "Map Window"
});
exports.mapWin = mapWin;
//window end

var holder = Ti.UI.createView({
	height : 800,
	bottom : 0,
	width : Ti.UI.FILL,
});

//Start GEOLOC and remotedata pull func
var runGeo = function() {
	//Start GEO func
	Ti.Geolocation.purpose = "Your location is needed to gather lat/long coords.";

	Ti.Geolocation.getCurrentPosition(function(e) {
		if (Ti.Geolocation.locationServicesEnabled) {
			// runGeo();
		} else {
			alert("Location service is not enabled.");
		};
		if (e.error) {
			alert("Getting your location has returned an error. Trying to connect...");
			// runGeo();
		} else {
			var lat = e.coords.latitude;
			var lng = e.coords.longitude;
			var url = "http://api.nytimes.com/svc/semantic/v2/geocodes/query.json?nearby=" + lat + "," + lng + "&api-key=ec2c67ba0d91240ac18bbf24043c8cb5:1:68792990";
			var coordinateLabel = Ti.UI.createLabel({
				color : '#fff',
				text : 'Latitude: ' + lat + ', Longitude: ' + lng,
				height : Ti.UI.SIZE,
				textAlign : 'center',
				font : {
					fontSize : '20dp',
					fontWeight : 'bold'
				}
			});
		}
		// End GEO func
		// Start remotedata pull
		var info = [];
		var response, name, population, lat, lng, dist, county;
		var remoteResponse = function() {
			// Response function code
			response = JSON.parse(this.responseText);
			for (var i = 0; i < response.results.length; i++) {
				name = response.results[i].geocode.name;
				population = response.results[i].geocode.population;
				lat = Math.round(response.results[i].geocode.latitude * 100) / 100;
				lng = Math.round(response.results[i].geocode.longitude * 1000) / 1000;
				dist = Math.round(response.results[i].geocode.distance * 100) / 100;
				st = response.results[i].geocode.admin_code1;
				county = response.results[i].geocode.admin_name2;
				cp = response.copyright;

				// pushing data to rows
				var rows = Ti.UI.createTableViewRow({
					id : i + 1,
					// title : name,
					name : name,
					st : st,
					county : county,
					population : population,
					distance : dist,
					cp : cp
				});

				info.push(rows);
			};
			var Map = require('ti.map');
			var mapview = Map.createView({
				mapType : Map.NORMAL_TYPE
			});
			mapWin.add(mapview);
			// console.log(info);
		
			//pushing rows to table
			search.timesTable.setData(info);

		};

		var remoteError = function(e) {
			Ti.API.debug("Status: " + this.status);
			Ti.API.debug("Text: " + this.responseText);
			Ti.API.debug("Error: " + e.error);
			alert("There's a problem pulling remote data");
		};

		var xhr = Ti.Network.createHTTPClient({
			onload : remoteResponse,
			onerror : remoteError,
			timeout : 5000
		});
		holder.add(coordinateLabel);

		xhr.open("GET", url);
		xhr.send();
	});

};
// End remote data pull
// End GEOLOC and remotedata pull func

//Run GEOLOC and remotedata pull func
runGeo();

mapWin.add(holder);

