//window start
var mapWin = Ti.UI.createWindow({
	title : "Info"
});
exports.mapWin = mapWin;
//window end

//this View holds the map
var theMapView = Ti.UI.createView({
	top : '10%',
	height : '60%',
	width : '100%'
});

//Start GEOLOC and remotedata pull func
var runGeo = function() {
	//Start GEOLOC func
	Ti.Geolocation.purpose = "Your location is needed to find places near you.";

	Ti.Geolocation.getCurrentPosition(function(e) {
		if (Ti.Geolocation.locationServicesEnabled) {
		} else {
			alert("Location service is not enabled.");
		};
		if (e.error) {
			alert("Cannot get your location. Trying to connect...");
		} else {
			var lat = e.coords.latitude;
			var lng = e.coords.longitude;
			var url = "http://api.wikilocation.org/articles?lat=" + lat + "&lng=" + lng + "&limit=10";
			console.log(url);
			var coordinateLabel = Ti.UI.createLabel({
				color : '#fff',
				text : 'Latitude: ' + lat + ', Longitude: ' + lng,
				height : Ti.Platform.displayCaps.platformHEIGHT,
				textAlign : 'center',
				font : {
					fontSize : '20dp',
					fontWeight : 'bold'
				}
			});
		}
		// End GEOLOC func

		// Start remotedata pull
		var info = [];
		var remoteResponse = function() {
			// Response function code
			json = JSON.parse(this.responseText);
			var articlejson = json.articles;
			for (var i = 0; i < articlejson.length; i++) {
				title = articlejson[i].title;
				lat = articlejson[i].lat;
				lng = articlejson[i].lng;
				type = articlejson[i].type;
				dist = articlejson[i].distance;
			}
			info.push({
				properties : {
					title : title,
					lat : lat,
					lng : lng,
					dist : dist,
					type : type
				},
				title : {
					text : title
				},
				lat : {
					text : lat
				},
				lng : {
					text : lng
				},
				dist : {
					text : dist
				},
				type : {
					text : type
				}
			});

			var mapview = Map.createView({
				mapType : Map.NORMAL_TYPE,
				annotations : [view],
				region : {
					latitude : lat,
					longitude : lng,
					latitudeDelta : 0.1,
					longitudeDelta : 0.1
				},
				enableZoomControls : true,
				regionFit : true
			});

			mapWin.add(mapview);

			//pushing rows to table
			pics.secList.setItems(info);
		};

		//if there is a problem pulling the data
		var remoteError = function(e) {
			Ti.API.debug("Status: " + this.status);
			Ti.API.debug("Text: " + this.responseText);
			Ti.API.debug("Error: " + e.error);
			alert("There is a problem connecting to the Internet");
		};

		//getting the data
		var xhr = Ti.Network.createHTTPClient({
			onload : remoteResponse,
			onerror : remoteError,
			timeout : 5000
		});
		holder.add(coordinateLabel);

		xhr.open("GET", url);
		xhr.send();
	});

};
// End remote data pull
// End GEOLOC and remotedata pull func

//Run GEOLOC and remotedata pull func
runGeo();

//Main Code
mapWin.add(holder);

